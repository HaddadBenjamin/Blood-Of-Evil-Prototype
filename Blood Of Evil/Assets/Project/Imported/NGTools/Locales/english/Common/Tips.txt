Tips_Title=Tips
Tips_Introduction=All the things you need to know to use the full power of this console, to reach an efficiency beyond the possible!\nTo the greatest knight, the greatest horse.\nTo the greatest baker, the finest flour.\nTo the best programmer, the best console! (And debugger, of course!)
Tip_Console_Title=A console full of surprises
Tip_Console_Content=The different options <b>"Clear"</b>, <b>"Clear on Play"</b> and <b>"Error pause"</b> are intrinsically linked to the native console from Unity. Pressing one of these will reproduce the exact behaviour from the native console.\n\n<b>Click</b> on the <b>"Conf"</b> button in the top-right corner of the console to ping the current configuration file used by the console.\n<b>Double-click</b> on the <b>"Conf"</b> button to select it in the inspector.\n\nThe <b>"Pref"</b> button opens the console's settings. From there, you can <b>change the language</b>, but also generate new configuration file.\nYou can switch between your configuration files at any moment. By this way, you can easily <b>share your settings</b> with anybody, because everything reside in an <b>exportable file</b>.\n\nEach configuration file contains the list of all inputs, each one is alterable. You can manage the inputs by clicking on the button at the right of a configuration file in the console's settings.
Tip_Module_Title=Mod Hulk...
Tip_Module_Content=The fundamental base is the class <b>Module</b>. It can interact with other <b>Module</b>, inject your code and modify the behaviour of the console.\n\nMainModule is an active <b>Module</b>, displayed in the tab bar, simply drawing logs.\n\nA <b>Module</b> might also be passive, not displayed in the tab bar, while modifying the behaviour of the console.\nColorMarkersModule is passive, but adds a background color to logs with filters defined by the user.\n\nYou can create your own implementation by creating a class inheriting from <b>Module</b>.
Tip_Stream_Title=The almighty power of streams
Tip_Stream_Content=You can add, change the name and delete streams as much as you wish.\nEach stream is independent, but it can interact with others if you enable the option "Consume logs" displayed by a Pac-MAN button. When a log is consumed, other streams will skip it.\nNotice that the main stream is not concerned with those options, it will always receive all the incoming logs.\n\nEach stream can filter logs by its type (Normal, warning, error, exception), they are independent from filters.\n\n<b>Right-click</b> on the header of the stream to modify its name or delete it.\n<b>Middle-click</b> on the header of the stream to delete it.\nSwitch between streams by pressing <b>Ctrl + Tab</b> or <b>Ctrl + Shift + Tab</b> (Default shortcuts).\n\nYou can create your own stream by creating a class inheriting from <b>StreamLog</b>.
Tip_Filter_Title=The subtle finesse of filters
Tip_Filter_Content=Filters regulate the acceptation of incoming logs. The rule is simple: a log is refused when at least one filter rejects it.\n\nEach filter can add an action in the context menu of logs, allowing an advanced interaction with logs.\n\n<b>Right-click</b> or <b>middle-click</b> on the header of the filter to delete it.\n\nYou can create your own filter by creating a class inheriting from <b>ILogFilter</b>.
Tip_Log_Title=Toying with logs
Tip_Log_Content=Logs are what you have written or are the result of an action from Unity, you can add a context object to it (The 2nd argument in the method Debug.Log/Warning/Error).\nWhen a context object is available, an icon representing the object's type is displayed on the left of the log.\n\n<b>Left-click</b> on the log to ping the context object in the Project or Hierarchy Window.\n<b>Double left-click</b> to go to line if it has been emitted from source code or to open the file for other types.\n<b>Middle-click</b> to display/hide the stack trace when available.\n<b>Right-click</b> to open the context menu.\n\nThe configuration file contains 2 settings improving the interaction with logs. See Log->"Force Focus On Modifier" and Log->"Select Object On Modifier".\n"Force Focus On Modifier" forces to go to line or open the object by a <b>click</b> + <b>Modifier</b>.\n"Select Object On Modifier" selects the context object by a <b>click</b> + <b>Modifier</b>.\n\nIt is possible to select multiple logs with the multi-selection feature, press <b>Ctrl</b> and <b>click</b> on logs.\n\nPress <b>Ctrl + C</b> (Windows) to copy the first line of selected logs.\n<b>Double Ctrl + C</b> or <b>Ctrl + X</b> (Windows) to copy the whole content of selected logs.\n\nWhenever there is only one selected log, its content is displayed on the bottom of the console separated by a splitter bar.\n<b>Double-click</b> or <b>right-click</b> on the splitter bar to automatically adjust the height to visualise the whole log.
Tip_Translation_Title=The translation everywhere
Tip_Translation_Content=Almost everything is translatable!\nIf you want to add your own language, you are free to create a folder in <b>"NGTools/Locales"</b>.\nRightafter, reimport any source code to force the update of languages.\nThen open the NG Settings and voil√†, here is your new language in the list!\n\nEvery translation files must have their extension ending with <b>".txt"</b>.\nThe format is simple, each key is separated by a new line and each line must start by a key followed by the separator "=" and end by the translation.\nTo add a new line in the translation, add a backslash "\" followed by the char "n".\n\nExample:\nKey1=Lorem ipsum dolor sit amet,\nconsectetur adipiscing elit.\nKey2=Nulla convallis, diam sit amet eleifend laoreet.
Tip_Tip_Title=Tipception
Tip_Tip_Content=You can add your own tips in this window by adding keys through the method <b>TipsWindow.AddTip</b>.\nThe given key must come with 2 translations respecting the following "Tip_{key}_Title" and "Tip_{key}_Content".